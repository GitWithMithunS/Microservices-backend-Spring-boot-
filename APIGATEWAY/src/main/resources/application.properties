spring.application.name=APIGATEWAY
server.port=9080

# ===============================
# Eureka Config
# ===============================
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# ===============================
# Gateway Discovery
# ===============================
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# ===============================
# Routes
# ===============================
spring.cloud.gateway.routes[0].id=product-service
spring.cloud.gateway.routes[0].uri=lb://PRODUCTSERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/productservice/**
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/productservice/(?<segment>.*), /${segment}
spring.cloud.gateway.routes[0].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[1].args.name=productCircuitBreaker
spring.cloud.gateway.routes[0].filters[1].args.fallbackUri=forward:/fallback/products

spring.cloud.gateway.routes[1].id=orders-service
spring.cloud.gateway.routes[1].uri=lb://ORDERS
spring.cloud.gateway.routes[1].predicates[0]=Path=/orders/**
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/orders/(?<segment>.*), /${segment}
spring.cloud.gateway.routes[1].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[1].filters[1].args.name=ordersCircuitBreaker
spring.cloud.gateway.routes[1].filters[1].args.fallbackUri=forward:/fallback/orders

spring.cloud.gateway.routes[2].id=user-service
spring.cloud.gateway.routes[2].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/users/**
spring.cloud.gateway.routes[2].filters[0]=RewritePath=/users/(?<segment>.*), /${segment}
spring.cloud.gateway.routes[2].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[2].filters[1].args.name=userCircuitBreaker
spring.cloud.gateway.routes[2].filters[1].args.fallbackUri=forward:/fallback/users

# ===============================
# OAuth2 Resource Server (JWT validation)
# ===============================
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://accounts.google.com

# ===============================
# Google OAuth2 Login
# ===============================
spring.profiles.active=secret
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:9080/login/oauth2/code/google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub


# ===============================
# Swagger UI Aggregation (springdoc 2.x)
# ===============================
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.urls[0].name=Product Service
springdoc.swagger-ui.urls[0].url=http://localhost:9090/v3/api-docs

springdoc.swagger-ui.urls[1].name=Order Service
springdoc.swagger-ui.urls[1].url=http://localhost:9093/v3/api-docs

springdoc.swagger-ui.urls[2].name=User Service
springdoc.swagger-ui.urls[2].url=http://localhost:9094/v3/api-docs